@model nStackViewModel

<head>
</head>
@using (Html.BeginForm("nStack", "nStack", FormMethod.Post, new { nStackViewModel = Model }))
{
    <div class="ContainerStack">
        <h2>nStack</h2>
        <div class="test">
        </div>

        <div class="table_container">
            @foreach (var tt in Model.testOptions)
            {
                string CheckboxID = tt.Key.Replace(" ", "");
                
                <button class="buttonT" id=@tt onclick="AccountFunct(@CheckboxID)">@tt.Key</button> @Html.HiddenFor(model => model.testOptions[tt.Key], new { id = CheckboxID })
            }
          
        </div>

        <h3><b>Companies that use a Specified sheet</b></h3>
        @if (Model.SelectedCompany.Count!=0)
        {
            <table>
                <tbody>
                    <tr  >
                        <th >Account Administration</th>
                    </tr>
                    <tr class="AccountAdmin" value="false">
                        @foreach (var Sheet in Model.SheetCheckboxes)
                        {
                            for (int iterator = 0; iterator < Sheet.Value.Count; iterator++)
                            {
                                @Html.HiddenFor(model => Sheet.Value[iterator], new { id = Sheet.Value[iterator].Name })
                                if (Model.AcctAdminUsedBy.Contains(Sheet.Value[iterator].Name))
                                {
                                    <td><b>@Sheet.Value[iterator].Name</b>@Html.CheckBoxFor(model => Sheet.Value[iterator].Checked, new { @class = "box" })</td>
                                }
                            }
                        }
                    </tr>
                </tbody>
            </table>
        }
        else
        {
            <h4 class="alert-danger"> There is No master Sheet ot pull from</h4>
        }

        <br />
        <input type="submit" value="Get Data" />

        @if (Model.MasterFile.Count != 0)
        {
            foreach (var tester in Model.SortedData)
            {
                if (Model.SelectedCompany.Contains(tester[0].CompanyName))
                {
                    if (Model.AccountAdminOption == true)
                    {
                        <h3>@tester[0].CompanyName</h3>
                        <table>
                            <tbody>
                                <tr>
                                    @foreach (var test in tester[0].KeyData)
                                    {
                                        for (int iter = 0; iter < test.Value.Count; iter++)
                                        {
                                            <td><b class="alert-info">@test.Key</b><br /><b>@test.Value.ElementAt(iter)</b><br />@test.Value.ElementAt(++iter)</td>
                                        }
                                    }
                                </tr>
                            </tbody>
                        </table>
                    }
                    if (Model.ShareDriveOption == true)
                    {
                        <h3>@tester[1].CompanyName</h3>
                        <table>
                            <tbody>
                                <tr>
                                    @foreach (var test in tester[1].KeyData)
                                    {

                                        for (int iter = 0; iter < test.Value.Count; iter++)
                                        {
                                            <td><b class="alert-info">@test.Key</b><br /><b>@test.Value.ElementAt(iter)</b><br />@test.Value.ElementAt(++iter)</td>
                                        }

                                    }
                                </tr>
                            </tbody>
                        </table>
                    }

                    if (Model.PhoneSupportOption == true)
                    {
                        <h3>@tester[2].CompanyName</h3>
                        <table>
                            <tbody>
                                <tr>
                                    @foreach (var test in tester[2].KeyData)
                                    {

                                        for (int iter = 0; iter < test.Value.Count; iter++)
                                        {
                                            <td><b class="alert-info">@test.Key</b><br /><b>@test.Value.ElementAt(iter)</b><br />@test.Value.ElementAt(++iter)</td>
                                        }

                                    }
                                </tr>
                            </tbody>
                        </table>
                    }

                    if (Model.SoftwareProvOption == true)
                    {
                        <h3>@tester[3].CompanyName</h3>
                        <table>
                            <tbody>
                                <tr>
                                    @foreach (var test in tester[3].KeyData)
                                    {

                                        for (int iter = 0; iter < test.Value.Count; iter++)
                                        {
                                            <td><b class="alert-info">@test.Key</b><br /><b>@test.Value.ElementAt(iter)</b><br />@test.Value.ElementAt(++iter)</td>
                                        }

                                    }
                                </tr>
                            </tbody>
                        </table>
                    }

                    if (Model.PrinterAdminOption == true)
                    {
                        <h3>@tester[4].CompanyName</h3>
                        <table>
                            <tbody>
                                <tr>
                                    @foreach (var test in tester[4].KeyData)
                                    {

                                        for (int iter = 0; iter < test.Value.Count; iter++)
                                        {
                                            <td><b class="alert-info">@test.Key</b><br /><b>@test.Value.ElementAt(iter)</b><br />@test.Value.ElementAt(++iter)</td>
                                        }

                                    }
                                </tr>
                            </tbody>
                        </table>
                    }

                    if (Model.PCSupportOption == true)
                    {
                        <h3>@tester[5].CompanyName</h3>
                        <table>
                            <tbody>
                                <tr>
                                    @foreach (var test in tester[5].KeyData)
                                    {

                                        for (int iter = 0; iter < test.Value.Count; iter++)
                                        {
                                            <td><b class="alert-info">@test.Key</b><br /><b>@test.Value.ElementAt(iter)</b><br />@test.Value.ElementAt(++iter)</td>
                                        }

                                    }
                                </tr>
                            </tbody>
                        </table>
                    }

                    if (Model.Office365Option == true)
                    {
                        <h3>@tester[6].CompanyName</h3>
                        <table>
                            <tbody>
                                <tr>
                                    @foreach (var test in tester[6].KeyData)
                                    {

                                        for (int iter = 0; iter < test.Value.Count; iter++)
                                        {
                                            <td><b class="alert-info">@test.Key</b><br /><b>@test.Value.ElementAt(iter)</b><br />@test.Value.ElementAt(++iter)</td>
                                        }

                                    }
                                </tr>
                            </tbody>
                        </table>
                    }

                    if (Model.MicrosoftOfficeSupportOption == true)
                    {
                        <h3>@tester[7].CompanyName</h3>
                        <table>
                            <tbody>
                                <tr>
                                    @foreach (var test in tester[7].KeyData)
                                    {

                                        for (int iter = 0; iter < test.Value.Count; iter++)
                                        {
                                            <td><b class="alert-info">@test.Key</b><br /><b>@test.Value.ElementAt(iter)</b><br />@test.Value.ElementAt(++iter)</td>
                                        }

                                    }
                                </tr>
                            </tbody>
                        </table>
                    }

                    if (Model.MonitoringOption == true)
                    {
                        <h3>@tester[8].CompanyName</h3>
                        <table>
                            <tbody>
                                <tr>
                                    @foreach (var test in tester[8].QandAData)
                                    {

                                        for (int iter = 0; iter < test.Count; iter++)
                                        {
                                            <td><br /><b>@test[iter]</b><br />@test[++iter]</td>
                                        }

                                    }
                                </tr>
                            </tbody>
                        </table>
                    }
                }
            }
        }

        <h4> Raw Data Lay out</h4>
        <button type="button" class="btn btn-primary" id="AllButton"> <span class="glyphicon glyphicon-tasks"> All </span></button>
        <button type="button" class="btn btn-danger" id="hideButton"> <span class="glyphicon glyphicon-remove"> Hide </span></button>
        <button type="button" class="btn btn-default" id="EditButton"><span class="glyphicon glyphicon-pencil" id="editIcon"> Edit </span></button>
        <div class="RawDataContainer">
            @foreach (var file in Model.MasterFile)
            {
                <div>
                    <h2>@file.CompanyName</h2>
                </div>
                foreach (var title in file.container)
                {
                    <table class="table">

                        <h4 class="cell">
                            @title.Key
                        </h4>
                        <tbody>
                            @foreach (var subTitle in title.Value)
                            {
                                <tr>
                                    <th>
                                        @subTitle.Key
                                    </th>
                                    @for (int i = 0; i < subTitle.Value.Count; i++)
                                    {
                                        var question = subTitle.Value.ElementAt(i);
                                        var answer = subTitle.Value.ElementAt(++i);
                                        <td class="cell"><b>@question</b> <br /> @answer</td>
                                    }
                                </tr>
                            }
                        </tbody>
                    </table>
                }
            }
        </div>
    </div>
}

@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/knockout")

<script>
    function myFunct() {

        $(".AccountAdmin").hide();
        $(".ShareDrive").hide();
        $(".PcSupport").hide();
        $(".MicrosoftOffice").hide();
        $(".PhoneSupport").hide();
        $(".SoftwareProv").hide();
        $(".PCSupport").hide();
        $(".PrinterAdmin").hide();
        $(".Office365").hide();
        $(".Monitoring").hide();
        $(".RawDataContainer").hide();
        $("#hideButton").hide();

        if ($("#Account").val() == "false") {
            $(".Account").hide();
        }

        if ($("#Account").val() == "true") {
            $(".Account").show();
        }

        if ($("#ShareDrive").val() == "false") {
            $(".ShareDrive").hide();
        }

        if ($("#ShareDrive").val() == "true") {
            $(".ShareDrive").show();
        }

        if ($("#PhoneSupport").val() == "false") {
            $(".PhoneSupport").hide();
        }

        if ($("#PhoneSupport").val() == "true") {
            $(".PhoneSupport").show();
        }

        if ($("#PrinterAdmin").val() == "false") {
            $(".PrinterAdmin").hide();
        }

        if ($("#PrinterAdmin").val() == "true") {
            $(".PrinterAdmin").show();
        }

        if ($("#SoftwareProv").val() == "false") {
            $(".SoftwareProv").hide();
        }

        if ($("#SoftwareProv").val() == "true") {
            $(".SoftwareProv").show();
        }

        if ($("#MicrosoftOffice").val() == "false") {
            $(".MicrosoftOffice").hide();
        }

        if ($("#MicrosoftOffice").val() == "true") {
            $(".MicrosoftOffice").show();
        }

        if ($("#PCSupport").val() == "false") {
            $(".PCSupport").hide();
        }

        if ($("#PCSupport").val() == "true") {
            $(".PCSupport").show();
        }

        if ($("#Office365").val() == "false") {
            $(".Office365").hide();
        }

        if ($("#Office365").val() == "true") {
            $(".Office365").show();
        }

        if ($("#Monitoring").val() == "false") {
            $(".Monitoring").hide();
        }

        if ($("#Monitoring").val() == "true") {
            $(".Monitoring").show();
        }

        $("#editIcon").click(function () {
            var val = $(".cell").attr("contenteditable", "true");
        })

        $("#AllButton").click(function () {

            $(".RawDataContainer").show();
            $("#hideButton").show();
        })

        $("#hideButton").click(function () {
            $(".RawDataContainer").hide();
            $("#hideButton").hide();
        })
    }
    window.onload = myFunct();
    function AccountFunct(SelectedCheckbox) {
        alert(SelectedCheckbox.value.toLowerCase());
        if (SelectedCheckbox.value.toLowerCase() == "false") {
            SelectedCheckbox.value = true;
            alert("set to True");
        }
        else if (SelectedCheckbox.value.toLowerCase() == "true") {
            SelectedCheckbox.value = false;
            alert("set to False");
        }
    }
</script>